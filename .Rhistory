install.packages("mongolite")
?packageStatus
packageStatus()
library("jsonlite")
heart <- fromJSON("https://www.dropbox.com/s/3nobbupqws7llxu/heart-rate.json?dl=0")
heart <- fromJSON("https://www.dropbox.com/s/3nobbupqws7llxu/heart-rate.json")
heart <- fromJSON("https://www.dropbox.com/s/3nobbupqws7llxu/heart-rate.json?dl=0", collapse="")
dmd <- mongo("diamonds")
library("mongolite")
dmd <- mongo("diamonds")
install.packages(c("httr", "jsonlite"))
install.packages(c("httr", "jsonlite"))
hadley_orgs <- fromJSON("https://api.github.com/users/hadley/orgs")
library("jsonlite")
hadley_orgs <- fromJSON("https://api.github.com/users/hadley/orgs")
heart_rate <- fromJSON("https://www.dropbox.com/s/3nobbupqws7llxu/heart-rate.json?dl=0")
heart_rate <- fromJSON("https://www.dropbox.com/s/kpmkqyx85dugfho/step-count.json?dl=0")
library(devtools)
install_github(repo = "mongosoup/rmongodb")
library(rmongodb)
mongo = mongo.create(host = "localhost")
mongo = mongo.create(host = "localhost")
mongo.is.connected(mongo)
mongo$import(url("https://www.dropbox.com/s/3nobbupqws7llxu/heart-rate.json?dl=0"))
mongo$import(gzcon(curl::curl("https://www.dropbox.com/s/3nobbupqws7llxu/heart-rate.json?dl=0
")))
flt <- mongo("flights")
library("mongolite")
flt <- mongo("flights")
flt$import(gzcon(curl::curl("https://jeroen.github.io/data/nycflights13.json.gz")))
heart <- mongo("heart-rate")
heart$import(gzcon(curl::curl("https://www.dropbox.com/s/3nobbupqws7llxu/heart-rate.json?dl=0")))
heart$import(gzcon(curl::curl("https://www.dropbox.com/s/kpmkqyx85dugfho/step-count.json?dl=0")))
library("rjson")
install.packages("rjson")
library("rjson")
json_file <- "https://www.dropbox.com/s/3nobbupqws7llxu/heart-rate.json?dl=0"
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
json_data <- fromJSON(paste(readLines(json_file)))
heart_file <- "/home/ubuntu/heart-rate.json"
step_file <- "home/ubuntu/step-count.json"
heart_url <- "https://www.dropbox.com/s/3nobbupqws7llxu/heart-rate.json?dl=0"
step_url <- "https://www.dropbox.com/s/kpmkqyx85dugfho/step-count.json?dl=0"
library(mongolite)
library(jsonlite)
library(curl)
heart <- stream_in(curl("https://www.dropbox.com/s/3nobbupqws7llxu/heart-rate.json?dl=0"))
heart_file <- "/home/ubuntu/heart-rate.json"
step_file <- "home/ubuntu/step-count.json"
heart_url <- "https://www.dropbox.com/s/3nobbupqws7llxu/heart-rate.json?dl=0"
step_url <- "https://www.dropbox.com/s/kpmkqyx85dugfho/step-count.json?dl=0"
library(mongolite)
library(jsonlite)
library(curl)
heart <- stream_in(curl("https://www.dropbox.com/s/3nobbupqws7llxu/heart-rate.json"))
heart <- stream_in(curl(heart_url))
heart_data <- fromJSON(file= "/ubuntu/home/heart-rate.json" )
heart_data <- fromJSON(file = heart_file)
View(heart_data)
heart_data <- mongo(collection = "heart-rate", db = "q3", url = "mongodb://localhost",
verbose = TRUE)
View(heart_data)
View(heart_data)
mydata <- heart_data$find()
stopifnot(all.equal(mydata, heart-rate))
con$drop()
mydata <- heart_data$find()
stopifnot(all.equal(mydata, heart_rate))
con$drop()
mydata <- heart_data$find()
stopifnot(all.equal(mydata, heart_rate))
mydata$drop()
mydata <- heart_data$find()
con <- mongo("mtcars", url = "mongodb://readwrite:test@ds043942.mongolab.com:43942/jeroen_test")
testdata <- con$find()
stopifnot(all.equal(testdata, mtcars))
View(con)
View(con)
View(heart)
View(heart)
View(heart_data)
View(heart_data)
View(heart)
View(heart)
con <- mongo("mtcars", url = "mongodb://readwrite:test@ds043942.mongolab.com:43942/jeroen_test")
mydata <- con$find()
stopifnot(all.equal(mydata, mtcars))
con$drop()
heart_data <- mongo(collection = "heart-rate", db = "q3", url = "mongodb://localhost",
verbose = TRUE)
View(heart_data)
View(heart_data)
data1 <- fromJSON("https://api.github.com/users/hadley/orgs")
mydata <- heart_data$find('{"user_id":1690}')
View(con)
con <- mongo("mtcars", url = "mongodb://readwrite:test@ds043942.mongolab.com:43942/jeroen_test")
if(con$count() > 0) con$drop()
con$insert(mtcars)
stopifnot(con$count() == nrow(mtcars))
View(con)
mydata <- con$find()
stopifnot(all.equal(mydata, mtcars))
con$drop()
heart_data <- mongo(collection = "heart-rate", db = "q3", url = "mongodb://localhost",
verbose = TRUE)
if(heart_data$count() > 0) heart_data$drop()
heart_data$insert(heart-rate)
View(con)
View(con)
View(heart_data)
View(heart_data)
mtcars
result <- merge(heart_bysubj, step_bysubj, by.x = c("user_heart", "date_heart"), by.y = c("user_step", "date_step"))
heart_data <- mongo(collection = "heart_rate", db = "q3", url = "mongodb://localhost",
verbose = TRUE)
step_data <- mongo(collection = "step_count", db = "q3", url = "mongodb://localhost",
verbose = TRUE)
#Query user ID, heart rate and step count
alldata <- heart_data$find('{}')
user_heart <- alldata$header$patient_business_id
date_heart <- alldata$header$creation_date_time
date_heart <- substring(date_heart,1,10)
heart <- alldata$body$heart_rate$value
alldata_step <- step_data$find('{}')
user_step <- alldata_step$header$patient_business_id
date_step <- alldata_step$header$creation_date_time
date_step <- substring(date_step,1,10)
step <- alldata_step$body$step_count
#Convert to tables
heart_table <- cbind(user_heart, date_heart, heart)
heart_table <- tbl_df(heart_table)
heart_table$heart <- as.numeric(heart_table$heart)
step_table <- cbind(user_step, date_step, step)
step_table <- tbl_df(step_table)
step_table$step <- as.numeric(step_table$step)
#Aggrerate user IDs, find mean heart rate for each user
DPM_heart <- group_by(heart_table, user_heart, date_heart)
heart_bysubj <- summarize(DPM_heart, heart_count = mean(heart, na.rm = T))
DPM_step <- group_by(step_table, user_step, date_step)
step_bysubj <- summarize(DPM_step, step_count = sum(step, na.rm = T))
library(mongolite)
library(curl)
library(data.table)
library(dplyr)
DPM_heart <- group_by(heart_table, user_heart, date_heart)
heart_bysubj <- summarize(DPM_heart, heart_count = mean(heart, na.rm = T))
DPM_step <- group_by(step_table, user_step, date_step)
step_bysubj <- summarize(DPM_step, step_count = sum(step, na.rm = T))
library(dplyr)
#Aggrerate user IDs, find mean heart rate for each user
DPM_heart <- group_by(heart_table, user_heart, date_heart)
View(step_table)
View(step_table)
step_table
heart_table$heart <- as.numeric(heart_table$heart)
heart_table <- tbl_df(heart_table)
heart_table <- cbind(user_heart, date_heart, heart)
heart_table <- tbl_df(heart_table)
heart_table$heart <- as.numeric(heart_table$heart)
step_table <- cbind(user_step, date_step, step)
step_table <- tbl_df(step_table)
step_table$step <- as.numeric(step_table$step)
DPM_heart <- group_by(heart_table, user_heart, date_heart)
heart_bysubj <- summarize(DPM_heart, heart_count = mean(heart, na.rm = T))
DPM_step <- group_by(step_table, user_step, date_step)
step_bysubj <- summarize(DPM_step, step_count = sum(step, na.rm = T))
result <- merge(heart_bysubj, step_bysubj, by.x = c("user_heart", "date_heart"), by.y = c("user_step", "date_step"))
View(result)
View(result)
result_group <- group_by(result, user_heart)
q4_ans <- summarize(DPM_heart, heart_count = mean(heart, na.rm = T))
View(q4_ans)
View(q4_ans)
result_group <- group_by(result, user_heart)
q4_ans <- summarize(result_group, heart_count = mean(heart, na.rm = T), step_count = mean(step, na.rm = T))
View(q4_ans)
q4_ans <- summarize(result_group, heart_count = mean(heart_count, na.rm = T), step_count = mean(step_count, na.rm = T))
View(q4_ans)
View(q4_ans)
plot(result$heart_count, result$step_count, main="Relationship between daily heart rate and step count",
xlab="heart rate times/min", ylab="step count", pch=10, col = "aquamarine3")
abline(lm(result$step_count~result$heart_count), col="red") # regression line (y~x)
lines(lowess(result$step_count~result$heart_count), col="blue") # lowess line (x,y)
View(step_bysubj)
View(heart_bysubj)
View(heart_bysubj)
legend("topright", pch = c(3, 19, NA, 3, 19),
col = c("red", "blue"),
legend = c("linear regression", "lowess regression"))
legend("topright",
col = c("red", "blue"),
legend = c("linear regression", "lowess regression"))
legend("topright", pch = c(3, 19),
col = c("red", "blue"),
legend = c("linear regression", "lowess regression"))
#Aggrerate user IDs and date, find mean daily heart rate and mean daily step count for each user
DPM_heart <- group_by(heart_table, user_heart, date_heart)
heart_bysubj <- summarize(DPM_heart, heart_count = mean(heart, na.rm = F))
DPM_step <- group_by(step_table, user_step, date_step)
step_bysubj <- summarize(DPM_step, step_count = sum(step, na.rm = F))
result <- merge(heart_bysubj, step_bysubj, by.x = c("user_heart", "date_heart"), by.y = c("user_step", "date_step"))
result_group <- group_by(result, user_heart)
q4_ans <- summarize(result_group, heart_count = mean(heart_count, na.rm = F), step_count = mean(step_count, na.rm = F))
plot(result$heart_count, result$step_count, main="Relationship between daily heart rate and step count",
xlab="heart rate times/min", ylab="step count", pch=10, col = "aquamarine3")
abline(lm(result$step_count~result$heart_count), col="red") # regression line (y~x)
lines(lowess(result$step_count~result$heart_count), col="blue") # lowess line (x,y)
legend("topright", pch = c(3, 19),
col = c("red", "blue"),
legend = c("linear regression", "lowess regression"))
View(q4_ans)
View(q4_ans)
DPM_heart <- group_by(heart_table, user_heart, date_heart)
heart_bysubj <- summarize(DPM_heart, heart_count = mean(heart, na.rm = F))
DPM_step <- group_by(step_table, user_step, date_step)
step_bysubj <- summarize(DPM_step, step_count = sum(step, na.rm = F))
View(step_bysubj)
View(step_bysubj)
View(result)
View(result)
DPM_heart <- group_by(heart_table, user_heart, date_heart)
heart_bysubj <- summarize(DPM_heart, heart_count = mean(heart, na.rm = T))
DPM_step <- group_by(step_table, user_step, date_step)
step_bysubj <- summarize(DPM_step, step_count = sum(step, na.rm = T))
View(step_bysubj)
View(step_bysubj)
result <- merge(heart_bysubj, step_bysubj, by.x = c("user_heart", "date_heart"), all.y = c("user_step", "date_step"))
result <- merge(heart_bysubj, step_bysubj, all.x = c("user_heart", "date_heart"), all.y = c("user_step", "date_step"))
result <- merge(heart_bysubj, step_bysubj, by.x = c("user_heart", "date_heart"), by.y = c("user_step", "date_step"), all.x = T)
View(result)
View(result)
result <- merge(step_bysubj, heart_bysubj, by.x = c("user_heart", "date_heart"), by.y = c("user_step", "date_step"), all.x = T)
result <- merge(step_bysubj, heart_bysubj, by.y = c("user_heart", "date_heart"), by.x = c("user_step", "date_step"), all.x = T)
View(result)
View(result)
result_group <- group_by(result, user_heart)
q4_ans <- summarize(result_group, heart_count = mean(heart_count, na.rm = F), step_count = mean(step_count, na.rm = F))
result_group <- group_by(result, user_step)
q4_ans <- summarize(result_group, heart_count = mean(heart_count, na.rm = F), step_count = mean(step_count, na.rm = F))
View(q4_ans)
View(q4_ans)
View(result)
View(result)
result_group <- group_by(result, user_step)
q4_ans <- summarize(result_group, heart_count = mean(heart_count, na.rm = T), step_count = mean(step_count, na.rm = T))
View(q4_ans)
View(q4_ans)
plot(result$heart_count, result$step_count, main="Relationship between daily heart rate and step count",
xlab="heart rate times/min", ylab="step count", pch=10, col = "aquamarine3")
abline(lm(result$step_count~result$heart_count), col="red") # regression line (y~x)
lines(lowess(result$step_count~result$heart_count), col="blue") # lowess line (x,y)
legend("topright", pch = c(3, 19),
col = c("red", "blue"),
legend = c("linear regression", "lowess regression"))
plot(result$heart_count, result$step_count, main="Relationship between daily heart rate and step count",
xlab="heart rate times/min", ylab="step count", pch=10, col = "aquamarine3")
abline(lm(result$step_count~result$heart_count), col="red") # regression line (y~x)
lines(lowess(result$step_count~result$heart_count), col="blue") # lowess line (x,y)
legend("topright", pch = c(3, 19),
col = c("red", "blue"),
legend = c("linear regression", "lowess regression"))
plot(result$heart_count, result$step_count, main="Relationship between daily heart rate and step count",
xlab="heart rate times/min", ylab="step count", pch=10, col = "aquamarine3")
abline(lm(result$step_count~result$heart_count), col="red") # regression line (y~x)
plot(result$heart_count, result$step_count, main="Relationship between daily heart rate and step count",
xlab="heart rate times/min", ylab="step count", pch=5, col = "aquamarine3")
plot(result$heart_count, result$step_count, main="Relationship between daily heart rate and step count",
xlab="heart rate times/min", ylab="step count", pch=4, col = "aquamarine3")
abline(lm(result$step_count~result$heart_count), col="red") # regression line (y~x)
plot(result$heart_count~result$step_count, main="Relationship between daily heart rate and step count",
ylab="heart rate times/min", xlab="step count", pch=4, col = "aquamarine3")
abline(lm(result$heart_count~result$step_count), col="red") # regression line (y~x)
plot(result$heart_count~result$step_count, main="Relationship between daily heart rate and step count",
ylab="heart rate times/min", xlab="step count", pch=4, col = "aquamarine3", ylim = c[50, 90])
plot(result$heart_count~result$step_count, main="Relationship between daily heart rate and step count",
ylab="heart rate times/min", xlab="step count", pch=4, col = "aquamarine3", ylim = c(50, 90))
abline(lm(result$heart_count~result$step_count), col="red") # regression line (y~x)
save.image("~/Q3_workspace.RData")
#Load workspace
load("./Q3_workspace.Rdata")
#Load workspace
load("/home/rstudio/Q3_workspace.Rdata")
load("/home/rstudio/Q3_workspace.RData")
